
// Make a component compatible with the 'Theme' field on a layout builder section.
// Some components (ex. card) don't have a default color. The !optional allows a default of 'none',
// without failing sass compilation, but allows for overriding this color by setting $default-color in
// the mixin.

@mixin theme_compatibility($component-name, $default-color: 'none') {
  .#{$component-name}--default {
    @extend .#{$component-name}--#{$default-color} !optional;
  }

  @each $theme, $combo in $theme-combos {
    .lb-section.theme--#{$theme} {
      header,
      footer,
      .column:not([class*='theme--']) {
        .#{$component-name}--default {
          @extend .#{$component-name}--#{$combo} !optional;
        }
      }
    }

    .column.theme--#{$theme} {
      .#{$component-name}--default {
        @extend .#{$component-name}--#{$combo} !optional;
      }
    }
  }
}

@mixin default_theme($component-name, $default-component-theme: 'primary') {
  .#{$component-name} {
    &.c-theme--default {
      // We don't use spaces so CSS vars with empty values don't get set.
      // (So we disable sass validation here).
      /* stylelint-disable */
      $color-settings: ('main', 'interactive', 'border', 'background');
      @each $value in $color-settings {
        --drupalizer-component__color-#{$value}: #{get($component-themes, #{$default-component-theme}, $value)};
        // --drupalizer-component__color-#{$value}-h: #{str-slice(quote(hue(get($component-themes, #{$default-component-theme}, $value))), 1, -4)};
        // --drupalizer-component__color-#{$value}-s: #{saturation(get($component-themes, #{$default-component-theme}, $value))};
        // --drupalizer-component__color-#{$value}-l: #{lightness(get($component-themes, #{$default-component-theme}, $value))};
      }
      --drupalizer-component__color-background:#{get($component-themes, #{$default-component-theme}, 'background')};
      --drupalizer-component__color-text:#{get($component-themes, #{$default-component-theme}, 'text')};
      --drupalizer-component__color-on-interactive-l:#{get($component-themes, #{$default-component-theme}, 'on-interactive-l')};

      &:hover {
        --drupalizer-component__color-interactive-l: var(--drupalizer-component__color-interactive-l--hover);
      }
      /* stylelint-enable */
    }
  }
}

